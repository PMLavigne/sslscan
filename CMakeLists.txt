CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

#
# Project Config
#
PROJECT(sslscan)

SET(APPLICATION_NAME "${PROJECT_NAME}")
SET(APPLICATION_CODENAME "${PROJECT_NAME}")
SET(APPLICATION_VERSION_MAJOR 0)
SET(APPLICATION_VERSION_MINOR 0)
SET(APPLICATION_VERSION_PATCH 1)
SET(APPLICATION_VERSION_TYPE SNAPSHOT)
SET(APPLICATION_VERSION_STRING "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}.${APPLICATION_VERSION_PATCH}-${APPLICATION_VERSION_TYPE}")

#
# OpenSSL Config
#
SET(OPENSSL_BRANCH "OpenSSL_1_0_2-stable")
SET(OPENSSL_DIR "./openssl/")
SET(OPENSSL_CONFIG_OPTIONS "no-shared")
SET(OPENSSL_REPO_URL "https://github.com/openssl/openssl")

#
# Debugging
#
SET(CMAKE_VERBOSE_MAKEFILE 0)

#
# Project Output
#
SET(MAINFOLDER ${PROJECT_SOURCE_DIR})
SET(EXECUTABLE_OUTPUT_PATH "${MAINFOLDER}/bin")


#
# Get Dependences
#
IF(EXISTS "${OPENSSL_DIR}/.git" AND IS_DIRECTORY "${OPENSSL_DIR}/.git")
    EXECUTE_PROCESS(COMMAND make dclean WORKING_DIRECTORY "${OPENSSL_DIR}")
    EXECUTE_PROCESS(COMMAND git reset --hard WORKING_DIRECTORY "${OPENSSL_DIR}")
ELSE()
    EXECUTE_PROCESS(COMMAND git clone "${OPENSSL_REPO_URL}" "${OPENSSL_DIR}")
ENDIF()

EXECUTE_PROCESS(COMMAND git checkout "${OPENSSL_BRANCH}" WORKING_DIRECTORY "${OPENSSL_DIR}")
EXECUTE_PROCESS(COMMAND git pull WORKING_DIRECTORY "${OPENSSL_DIR}")


